import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useChainInfo, useMetrics, useListCollections } from '@goudchain/hooks';
import { Card, CardHeader, CardTitle, CardContent, Spinner } from '@goudchain/ui';
import { formatNumber, formatRelativeTime } from '@goudchain/utils';
import { SpinnerSize } from '@goudchain/types';
export default function DashboardPage() {
    const { data: chainInfo, isLoading: chainLoading } = useChainInfo();
    const { data: metrics, isLoading: metricsLoading } = useMetrics();
    const { data: collections, isLoading: collectionsLoading } = useListCollections();
    if (chainLoading || metricsLoading || collectionsLoading) {
        return (_jsx("div", { className: "flex items-center justify-center h-64", children: _jsx(Spinner, { size: SpinnerSize.Large }) }));
    }
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-3xl font-bold text-white mb-2", children: "Dashboard" }), _jsx("p", { className: "text-zinc-500", children: "Overview of your blockchain activity" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-sm text-zinc-400", children: "Chain Length" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-3xl font-bold text-white", children: formatNumber(chainInfo?.chain_length ?? 0) }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-sm text-zinc-400", children: "Collections" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-3xl font-bold text-white", children: formatNumber(collections?.collections.length ?? 0) }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-sm text-zinc-400", children: "Peer Count" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-3xl font-bold text-white", children: formatNumber(metrics?.network.peer_count ?? 0) }) })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Latest Block" }) }), _jsx(CardContent, { children: chainInfo?.latest_block ? (_jsxs("div", { className: "space-y-2 font-mono text-sm", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-zinc-400", children: "Block Number:" }), _jsx("span", { className: "text-white", children: chainInfo.latest_block.block_number })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-zinc-400", children: "Timestamp:" }), _jsx("span", { className: "text-white", children: formatRelativeTime(chainInfo.latest_block.timestamp) })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-zinc-400", children: "Data Count:" }), _jsx("span", { className: "text-white", children: chainInfo.latest_block.data_count })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-zinc-400", children: "Validator:" }), _jsx("span", { className: "text-white truncate max-w-xs", children: chainInfo.latest_block.validator })] })] })) : (_jsx("p", { className: "text-zinc-500", children: "No blocks yet" })) })] })] }));
}
//# sourceMappingURL=dashboard.js.map