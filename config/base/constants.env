# Goud Chain Configuration Constants
# Base configuration values shared across all environments

# ============================================================================
# NETWORK PORTS
# ============================================================================
HTTP_PORT=8080
P2P_PORT=9000
NGINX_HTTP_PORT=80
NGINX_API_PORT=8080
DASHBOARD_PORT=3000

# Port mappings for individual nodes (host:container)
NODE1_HTTP_EXTERNAL=8081
NODE2_HTTP_EXTERNAL=8082
NODE3_HTTP_EXTERNAL=8083
NODE1_P2P_EXTERNAL=9001
NODE2_P2P_EXTERNAL=9002
NODE3_P2P_EXTERNAL=9003

# ============================================================================
# NGINX CONFIGURATION
# ============================================================================
# Worker configuration
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_ERROR_LOG_LEVEL=warn

# Performance settings
NGINX_SENDFILE=on
NGINX_TCP_NOPUSH=on
NGINX_TCP_NODELAY=on
NGINX_KEEPALIVE_TIMEOUT=65
NGINX_TYPES_HASH_MAX_SIZE=2048

# Buffer settings
NGINX_CLIENT_BODY_BUFFER_SIZE=16K
NGINX_CLIENT_MAX_BODY_SIZE=1M

# Upstream connection pooling
NGINX_KEEPALIVE_CONNECTIONS=32
NGINX_KEEPALIVE_REQUESTS=100
NGINX_KEEPALIVE_TIMEOUT_UPSTREAM=60s

# Health check settings
NGINX_MAX_FAILS=3
NGINX_FAIL_TIMEOUT=30s

# Proxy timeouts (read operations) - optimized for async backend
NGINX_PROXY_CONNECT_TIMEOUT_READ=5s
NGINX_PROXY_SEND_TIMEOUT_READ=30s
NGINX_PROXY_READ_TIMEOUT_READ=60s

# Proxy timeouts (write operations) - optimized for async backend
NGINX_PROXY_CONNECT_TIMEOUT_WRITE=5s
NGINX_PROXY_SEND_TIMEOUT_WRITE=30s
NGINX_PROXY_READ_TIMEOUT_WRITE=90s

# Proxy timeouts (health checks)
NGINX_PROXY_CONNECT_TIMEOUT_HEALTH=5s
NGINX_PROXY_READ_TIMEOUT_HEALTH=10s

# Proxy buffering
NGINX_PROXY_BUFFER_SIZE=4k
NGINX_PROXY_BUFFERS="8 4k"

# Cache control
NGINX_CACHE_MAX_AGE_READ=2
NGINX_CACHE_STALE_WHILE_REVALIDATE=5
NGINX_CACHE_MAX_AGE_VALIDATOR=1

# ============================================================================
# DOCKER RESOURCE LIMITS - LOCAL (Development)
# ============================================================================
# NGINX
LOCAL_NGINX_CPU_LIMIT=0.25
LOCAL_NGINX_MEM_LIMIT=64M
LOCAL_NGINX_CPU_RESERVATION=0.10
LOCAL_NGINX_MEM_RESERVATION=32M

# Dashboard
LOCAL_DASHBOARD_CPU_LIMIT=0.50
LOCAL_DASHBOARD_MEM_LIMIT=128M
LOCAL_DASHBOARD_CPU_RESERVATION=0.25
LOCAL_DASHBOARD_MEM_RESERVATION=64M

# Blockchain Nodes (uniform for local dev)
LOCAL_NODE_CPU_LIMIT=1.00
LOCAL_NODE_MEM_LIMIT=512M
LOCAL_NODE_CPU_RESERVATION=0.50
LOCAL_NODE_MEM_RESERVATION=256M

# ============================================================================
# DOCKER RESOURCE LIMITS - GCP (e2-micro: 1GB RAM, shared CPU)
# ============================================================================
# Total allocation: ~850M (leaving 150M for OS + Docker overhead)

# NGINX
GCP_NGINX_CPU_LIMIT=0.10
GCP_NGINX_MEM_LIMIT=32M
GCP_NGINX_CPU_RESERVATION=0.05
GCP_NGINX_MEM_RESERVATION=24M

# Dashboard
GCP_DASHBOARD_CPU_LIMIT=0.10
GCP_DASHBOARD_MEM_LIMIT=64M
GCP_DASHBOARD_CPU_RESERVATION=0.05
GCP_DASHBOARD_MEM_RESERVATION=48M

# Node 1 (Primary Writer) - ASYNC ARCHITECTURE: 50-70% less memory than thread-based
GCP_NODE1_CPU_LIMIT=0.50
GCP_NODE1_MEM_LIMIT=384M
GCP_NODE1_CPU_RESERVATION=0.25
GCP_NODE1_MEM_RESERVATION=256M

# Node 2 (Passive Reader) - ASYNC ARCHITECTURE: Increased for read load (50% of traffic)
GCP_NODE2_CPU_LIMIT=0.30
GCP_NODE2_MEM_LIMIT=256M
GCP_NODE2_CPU_RESERVATION=0.15
GCP_NODE2_MEM_RESERVATION=192M

# ============================================================================
# HEALTH CHECK CONFIGURATION
# ============================================================================
# NGINX
NGINX_HEALTHCHECK_INTERVAL=30s
NGINX_HEALTHCHECK_TIMEOUT=10s
NGINX_HEALTHCHECK_RETRIES=3
NGINX_HEALTHCHECK_START_PERIOD=10s

# Dashboard
DASHBOARD_HEALTHCHECK_INTERVAL=30s
DASHBOARD_HEALTHCHECK_TIMEOUT=10s
DASHBOARD_HEALTHCHECK_RETRIES=3
DASHBOARD_HEALTHCHECK_START_PERIOD=20s

# Blockchain Nodes
NODE_HEALTHCHECK_INTERVAL=30s
NODE_HEALTHCHECK_TIMEOUT=10s
NODE_HEALTHCHECK_RETRIES=3
NODE_HEALTHCHECK_START_PERIOD=30s

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================
LOG_DRIVER=json-file
LOG_MAX_SIZE=5m
LOG_MAX_FILE=2

# GCP optimized (more aggressive)
GCP_LOG_MAX_SIZE=5m
GCP_LOG_MAX_FILE=2

# Local development (more history)
LOCAL_LOG_MAX_SIZE=10m
LOCAL_LOG_MAX_FILE=5

# ============================================================================
# DNS / HOSTNAMES
# ============================================================================
# Local environment uses simple names
LOCAL_NODE1_HOSTNAME=node1
LOCAL_NODE2_HOSTNAME=node2
LOCAL_NODE3_HOSTNAME=node3
LOCAL_NGINX_HOSTNAME=nginx
LOCAL_DASHBOARD_HOSTNAME=dashboard

# GCP uses goud_ prefix for clarity
GCP_NODE1_HOSTNAME=goud_node1
GCP_NODE2_HOSTNAME=goud_node2
GCP_NGINX_HOSTNAME=goud_nginx_lb
GCP_DASHBOARD_HOSTNAME=goud_dashboard

# External domains
GCP_API_DOMAIN=dev-api.goudchain.com
GCP_DASHBOARD_DOMAIN=dev-dashboard.goudchain.com

# ============================================================================
# DOCKER IMAGE CONFIGURATION
# ============================================================================
BLOCKCHAIN_IMAGE_NAME=goud-chain
DASHBOARD_IMAGE_NAME=goud-chain-dashboard
NGINX_IMAGE=nginx:alpine

# Image tags
IMAGE_TAG_LATEST=latest

# Container registry (for CI)
GHCR_REGISTRY=ghcr.io
GHCR_OWNER=yourusername

# ============================================================================
# BLOCKCHAIN CONFIGURATION
# ============================================================================
DATA_DIR=/data

# Restart policy
RESTART_POLICY=unless-stopped

# ============================================================================
# PERSISTENT VOLUME CONFIGURATION
# ============================================================================
# Volume driver (local, gcePersistentDisk, awsElasticBlockStore)
VOLUME_DRIVER=local

# Volume mount options (driver-specific)
VOLUME_DRIVER_OPTS=

# Backup configuration
BACKUP_ENABLED=false
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION=gzip

# ============================================================================
# ENVIRONMENT-SPECIFIC NODE COUNTS
# ============================================================================
LOCAL_NODE_COUNT=3
GCP_NODE_COUNT=2
CI_NODE_COUNT=2

# ============================================================================
# ENVIRONMENT-SPECIFIC ROUTING
# ============================================================================
# Hash method for load distribution
NGINX_HASH_METHOD="hash \$remote_addr consistent"

# ============================================================================
# GCP-SPECIFIC KERNEL TUNING
# ============================================================================
GCP_SOMAXCONN=8192
GCP_TCP_MAX_SYN_BACKLOG=512
GCP_TCP_FIN_TIMEOUT=30
GCP_NETDEV_MAX_BACKLOG=2000

# ============================================================================
# RATE LIMITING (DoS Protection)
# ============================================================================
# Bypass whitelist - comma-separated API key hashes (empty = no bypass)
# Example: RATE_LIMIT_BYPASS_KEYS=hash1,hash2,hash3
RATE_LIMIT_BYPASS_KEYS=

# Request limits (per second per API key)
RATE_LIMIT_WRITE_PER_SEC=10
RATE_LIMIT_READ_PER_SEC=100

# Enable IP banning after complete blacklist (5th violation)
RATE_LIMIT_ENABLE_IP_BAN=true

# ============================================================================
# AUDIT LOGGING (Operational Security)
# ============================================================================
# Enable audit logging for compliance (GDPR/HIPAA)
AUDIT_LOGGING_ENABLED=true

# Batch flush interval (seconds) - Events buffered and flushed periodically
AUDIT_BATCH_INTERVAL_SECONDS=10

# Batch size threshold - Flush when this many events accumulated
AUDIT_BATCH_SIZE=50

# Retention period (days) - Minimum 365 for GDPR compliance
AUDIT_LOG_RETENTION_DAYS=365

# IP address privacy - Store truncated SHA256(IP) for privacy
AUDIT_IP_HASH_LENGTH=8

# ============================================================================
# METRICS & MONITORING (Operational Security)
# ============================================================================
# Enable Prometheus metrics export
METRICS_ENABLED=true

# Metrics scrape interval (Prometheus external config)
METRICS_SCRAPE_INTERVAL=15s

# Metrics update interval (internal aggregation)
METRICS_UPDATE_INTERVAL_SECS=5
