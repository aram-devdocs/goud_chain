name: E2E Tests (Simple)

on:
  push:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/e2e-tests-simple.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/e2e-tests-simple.yml'
  workflow_dispatch:

jobs:
  e2e-tests:
    name: E2E Tests (Chromium Only)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build backend Docker image
        run: docker build -t goud-chain:latest -f Dockerfile .
      
      - name: Build dashboard Docker image
        run: docker build -t goud-chain-dashboard:latest -f web/Dockerfile web/
      
      - name: Start Docker Compose services
        run: |
          docker compose -f docker-compose.local.yml up -d
          sleep 30
      
      - name: Check Docker services
        run: docker compose -f docker-compose.local.yml ps
      
      - name: Check Docker logs
        run: docker compose -f docker-compose.local.yml logs --tail=50
      
      - name: Wait for backend health
        run: |
          for i in {1..60}; do
            if curl -f http://localhost:8080/health 2>/dev/null; then
              echo "✓ Backend is healthy"
              break
            fi
            echo "Waiting for backend... ($i/60)"
            if [ $i -eq 60 ]; then
              echo "❌ Backend health check failed"
              docker compose -f docker-compose.local.yml logs
              exit 1
            fi
            sleep 2
          done
      
      - name: Test backend API directly
        run: |
          echo "Testing backend API..."
          curl -v http://localhost:8080/health
          curl -v http://localhost:8080/chain
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Install dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile
      
      - name: Build packages
        working-directory: web
        run: |
          echo "Building shared packages..."
          pnpm --filter @goudchain/types build
          pnpm --filter @goudchain/utils build
          pnpm --filter @goudchain/hooks build
          pnpm --filter @goudchain/ui build
      
      - name: Start dashboard dev server
        working-directory: web/apps/dashboard
        run: |
          echo "Starting dashboard..."
          nohup pnpm dev > dashboard.log 2>&1 &
          echo $! > dashboard.pid
          
          echo "Waiting for dashboard to start..."
          for i in {1..90}; do
            if curl -f http://localhost:3000 2>/dev/null; then
              echo "✓ Dashboard is ready"
              break
            fi
            echo "Waiting for dashboard... ($i/90)"
            if [ $i -eq 90 ]; then
              echo "❌ Dashboard startup failed"
              echo "=== Dashboard Log ==="
              cat dashboard.log
              exit 1
            fi
            sleep 2
          done
      
      - name: Verify dashboard is serving
        run: |
          echo "Testing dashboard..."
          curl -v http://localhost:3000
      
      - name: Install Playwright browsers
        working-directory: web
        run: pnpm exec playwright install --with-deps chromium
      
      - name: Run E2E tests (Auth only for now)
        working-directory: web
        run: pnpm test:e2e e2e/tests/auth.spec.ts --project=chromium
        env:
          CI: true
          E2E_SKIP_GLOBAL_SETUP: true
          DASHBOARD_URL: http://localhost:3000
          API_URL: http://localhost:8080
          WS_URL: ws://localhost:8080/ws
      
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: web/playwright-report/
          retention-days: 30
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: web/test-results/
          retention-days: 30
      
      - name: Upload dashboard logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-logs
          path: web/apps/dashboard/dashboard.log
          retention-days: 7
      
      - name: Upload Docker logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: docker-logs.txt
          retention-days: 7
      
      - name: Collect Docker logs
        if: always()
        run: docker compose -f docker-compose.local.yml logs > docker-logs.txt
      
      - name: Stop dashboard
        if: always()
        working-directory: web/apps/dashboard
        run: |
          if [ -f dashboard.pid ]; then
            kill $(cat dashboard.pid) || true
          fi
      
      - name: Stop Docker Compose services
        if: always()
        run: docker compose -f docker-compose.local.yml down -v
