name: E2E Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'web/**'
      - '.github/workflows/e2e-tests.yml'
  workflow_dispatch:

jobs:
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

      - name: Build packages
        working-directory: web
        run: |
          pnpm --filter @goudchain/types build
          pnpm --filter @goudchain/utils build
          pnpm --filter @goudchain/hooks build
          pnpm --filter @goudchain/ui build

      - name: Install Playwright browsers
        working-directory: web
        run: pnpm exec playwright install --with-deps chromium

      - name: Run smoke tests
        working-directory: web
        run: pnpm test:e2e:smoke
        env:
          CI: true

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-report
          path: web/playwright-report/
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: web/test-results/
          retention-days: 30
  
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    continue-on-error: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Install dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile
      
      - name: Install http-server
        run: npm install -g http-server
      
      - name: Build packages
        working-directory: web
        run: |
          pnpm --filter @goudchain/types build
          pnpm --filter @goudchain/utils build
      
      - name: Build Storybook
        working-directory: web/packages/ui
        run: pnpm build-storybook
      
      - name: Start Storybook server
        working-directory: web/packages/ui
        run: |
          http-server storybook-static -p 6006 > storybook.log 2>&1 &
          echo $! > storybook.pid
          echo "Waiting for Storybook..."
          for i in {1..30}; do
            if curl -f http://localhost:6006 2>/dev/null; then
              echo "Storybook is ready"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Storybook startup failed"
              cat storybook.log
              exit 1
            fi
            sleep 2
          done
      
      - name: Install Playwright browsers
        working-directory: web
        run: pnpm exec playwright install --with-deps chromium
      
      - name: Run visual regression tests
        working-directory: web
        run: pnpm test:e2e:visual
        env:
          CI: true
          STORYBOOK_URL: http://localhost:6006
          VISUAL_THRESHOLD: 0.1
      
      - name: Upload visual regression artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-report
          path: |
            web/playwright-report/
            web/e2e/visual/actual/
            web/e2e/visual/diff/
          retention-days: 30
      
      - name: Stop Storybook
        if: always()
        working-directory: web/packages/ui
        run: |
          if [ -f storybook.pid ]; then
            kill $(cat storybook.pid) || true
            rm storybook.pid
          fi

  test-report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: [smoke-tests, visual-regression]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate combined report
        run: |
          echo "# E2E Test Results" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Execution Summary" >> test-summary.md
          echo "- Smoke Tests: Completed (mock-based)" >> test-summary.md
          echo "- Visual Regression: Completed (Storybook)" >> test-summary.md
          echo "" >> test-summary.md
          echo "See artifacts for detailed reports." >> test-summary.md

      - name: Upload test summary
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
          retention-days: 30
