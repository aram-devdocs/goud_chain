# Docker Compose for Goud Chain - Local Development (3-node setup)
# Generated from template - DO NOT EDIT MANUALLY
# Generated: 2025-10-17 02:55:35 UTC
#
# Usage:
#   docker-compose -f docker-compose.local.yml up -d

version: '3.8'

# YAML anchors for reusable configuration
x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "5"

x-node-base: &node-base
  image: goud-chain:latest
  build:
    context: .
    dockerfile: Dockerfile
  networks:
    - goud_network
  restart: unless-stopped
  logging: *default-logging
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 30s

x-nginx-base: &nginx-base
  image: nginx:alpine
  networks:
    - goud_network
  restart: unless-stopped
  logging: *default-logging
  healthcheck:
    test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/lb/health"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 10s

x-dashboard-base: &dashboard-base
  image: goud-chain-dashboard:latest
  build:
    context: ./web
    dockerfile: Dockerfile
  networks:
    - goud_network
  restart: unless-stopped
  logging: *default-logging
  healthcheck:
    test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 20s


services:
  # NGINX Load Balancer - Primary API endpoint
  nginx:
    <<: *nginx-base
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.local.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cors.conf:/etc/nginx/cors.conf:ro
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M
        reservations:
          cpus: '0.10'
          memory: 32M

  # Dashboard - Web UI (React + Nginx)
  dashboard:
    <<: *dashboard-base
    container_name: dashboard
    ports:
      - "3000:80"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M

  # Blockchain Node 1 - Validator 1
  node1:
    <<: *node-base
    container_name: node1
    environment:
      - NODE_ID=node1
      - HTTP_PORT=8080
      - P2P_PORT=9000
      - PEERS=node2:9000,node3:9000
      - NODE1_ADDR=node1:8080
      - NODE2_ADDR=node2:8080
      - NODE3_ADDR=node3:8080
    ports:
      - "8081:8080"
      - "9001:9000"
    volumes:
      - node1_data:/data
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 256M

  # Blockchain Node 2 - Validator 2
  node2:
    <<: *node-base
    container_name: node2
    environment:
      - NODE_ID=node2
      - HTTP_PORT=8080
      - P2P_PORT=9000
      - PEERS=node1:9000,node3:9000
      - NODE1_ADDR=node1:8080
      - NODE2_ADDR=node2:8080
      - NODE3_ADDR=node3:8080
    ports:
      - "8082:8080"
      - "9002:9000"
    volumes:
      - node2_data:/data
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 256M

  # Blockchain Node 3 - Validator 3
  node3:
    <<: *node-base
    container_name: node3
    environment:
      - NODE_ID=node3
      - HTTP_PORT=8080
      - P2P_PORT=9000
      - PEERS=node1:9000,node2:9000
      - NODE1_ADDR=node1:8080
      - NODE2_ADDR=node2:8080
      - NODE3_ADDR=node3:8080
    ports:
      - "8083:8080"
      - "9003:9000"
    volumes:
      - node3_data:/data
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 256M

  # Jupyter Lab - API testing notebooks and experiments
  jupyter:
    build: ./python
    container_name: goud_jupyter
    ports:
      - "8888:8888"
    volumes:
      # Read-only mount for git-tracked notebooks
      - ./python/notebooks:/home/jovyan/work/notebooks:ro
      # Read-write mount for scratch/experimental notebooks
      - jupyter_scratch:/home/jovyan/work/scratch
    networks:
      - goud_network
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=
    restart: unless-stopped
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging: *default-logging

networks:
  goud_network:
    driver: bridge

volumes:
  node1_data:
  node2_data:
  node3_data:
  jupyter_scratch:
