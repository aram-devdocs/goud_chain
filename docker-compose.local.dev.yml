services:
  node1:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        BUILD_MODE: ${BUILD_MODE:-release}
    volumes:
      - ./src:/app/src
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - shared_cargo_cache:/usr/local/cargo/registry
      - ./target:/app/target
      - node1_data:/data

  node2:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        BUILD_MODE: ${BUILD_MODE:-release}
    volumes:
      - ./src:/app/src
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - shared_cargo_cache:/usr/local/cargo/registry
      - ./target:/app/target

  node3:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        BUILD_MODE: ${BUILD_MODE:-release}
    volumes:
      - ./src:/app/src
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - shared_cargo_cache:/usr/local/cargo/registry
      - ./target:/app/target
      - node3_data:/data

  dashboard:
    build: !reset null
    image: node:22-slim
    container_name: dashboard-dev
    working_dir: /app
    command: sh -c "corepack enable && corepack prepare pnpm@9.15.0 --activate && pnpm install && pnpm dev"
    ports:
      - "3001:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  jupyter:
    volumes:
      - ./python/notebooks:/home/jovyan/work/notebooks:rw

volumes:
  shared_cargo_cache:
  node1_data:
  node2_data:
  node3_data:
